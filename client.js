'use strict';
const elgamal = require('./elgamal');
const BigInt = require('jsbn').BigInteger;


// 1024-bit MODP group from RFC 5114
const prime = new BigInt('124325339146889384540494091085456630009856882741872806181731279018491820800119460022367403769795008250021191767583423221479185609066059226301250167164084041279837566626881119772675984258163062926954046545485368458404445166682380071370274810671501916789361956272226105723317679562001235501455748016154805420913');

const gen = new BigInt('115740200527109164239523414760926155534485715860090261532154107313946218459149402375178179458041461723723231563839316251515439564315555249353831328479173170684416728715378198172203100328308536292821245983596065287318698169565702979765910089654821728828592422299160041156491980943427556153020487552135890973413');

function main() {
  const x = new BigInt('9');

  const { pk, sk } = elgamal.GenKey(gen, prime, x);

  const m = "Hello World!";
  const rand = new BigInt("123"); // this should be random
  const { c1, c2 } = elgamal.Encrypt(pk, rand, m);
  console.log(c1, c2);
  //console.log(ctx, pk, sk);
}

main();
